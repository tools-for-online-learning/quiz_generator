{"1_original": {"question": "In a math class activity, students are trying to invent the formula to calculate the area of a square while also contrasting it with calculating the area of a rectangle and triangle. Students are given the right answer after the invent and contrast activity. What are the likely benefits student would get out of this activity of inventing and contrasting cases?", "a": "Students will better select the right formula for the problem", "b": "Students will perceive a better learning of the surface area concept", "c": "Students will remember the formulas longer than they would with lecture-practice method", "d": "Students will perform better in other unrelated math concepts", "correct": "A, C", "feedback": "Benefits of this methods are (1) delayed recall, students remember the information better for longer and will be able to computer areas for longer (2) pressure transfer task/contextualizing knowledge, more students will use the right formula for area problems after the activity."}, "1_retake": {"question": "In a math class activity, students are trying to invent the formula to calculate the area of a square while also contrasting it with calculating the area of a rectangle and triangle. Students are given the right answer after the invent and contrast activity. What are the likely benefits student would get out of this activity of inventing and contrasting cases?", "feedback": "Benefits of this methods are (1) delayed recall, students remember the information better for longer and will be able to computer areas for longer (2) pressure transfer task/contextualizing knowledge, more students will use the right formula for area problems after the activity.", "A": "increased attention Generate their own knowledge Summarizing", "correct": "A", "B": "Students are likely to gain the ability to conditionalize the concept, or better understand how it applies or changes according to the scenario in a more refined way. The contrasting cases will mean that student's attention is focused on important features. Because they are participating in invent-then-tell, the students will retain the concept longer as well.", "C": "by following the 'contrasting' path, students will develop a better understanding of the problem and hence will perceive a better learning of the surface area concept (i.e. will be able to come up with a formula for the surface of a proper pentagon). They are also likely to remember the formulas longer as the concept they understood will allow them to basically write down the formula without memorising it by heart, so they fill not forget the formulas. As for other options, the performance on unrelated math concepts is questionable and there is no evidence that it happens. As for the remaining option, 'better' here needs to be clarified. Better than if they didn't participate in this activity? If so, then It is not clear. If instead of this activity, students were doing standard test and practise, then their performance on the test (that happens right after the education) might be the same, because they remember well what formula applies to what figure.", "D": "They create and test their own hypothesis, which helps with far-transfer."}, "2_original": {"question": "The \u201cStable-pairing\u201d design pattern suggests that when learners need to be paired for multiple peer tutoring sessions, for larger learning gains learners overall, they should be paired such that over long periods of time (e.g. a month), they have the same partner. The \u201cMax-welfare\u201d design pattern suggests that when learners need to be paired for peer-tutoring over multiple sessions, for maximizing the learning gain in each session they should be paired with the partner they are most likely to learn from in that session. If you\u2019re designing a peer tutoring iPhone app where learners can participate in tutoring over any duration, how would you decide which pattern to use?", "a": "Conduct a controlled test (or A/B test) to see which pattern yields the best result in our app", "b": "Try the easier pattern to implement first (e.g. stable-pairing), then move to max-welfare if results are inadequate", "c": "Choose the max-welfare pattern because max-welfare would choose the stable-matching pairing if that were indeed more optimal", "d": "Choose the stable-matching pattern because we are trying to optimize for learning over many sessions, not just one particular session", "correct": "A", "feedback": "A/B testing to compare the two design patterns"}, "2_retake": {"question": "The \u201cStable-pairing\u201d design pattern suggests that when learners need to be paired for multiple peer tutoring sessions, for larger learning gains learners overall, they should be paired such that over long periods of time (e.g. a month), they have the same partner. The \u201cMax-welfare\u201d design pattern suggests that when learners need to be paired for peer-tutoring over multiple sessions, for maximizing the learning gain in each session they should be paired with the partner they are most likely to learn from in that session. If you\u2019re designing a peer tutoring iPhone app where learners can participate in tutoring over any duration, how would you decide which pattern to use?", "feedback": "A/B testing to compare the two design patterns", "B": "Since we are in online media, I would pick max-welfare. The reason is that if learners are not required to come to the same classroom by the same time, then it is very hard to ensure that learners in single pair are able to synchronise. Given that online media often assumes self-paced learning it might also be an issue (i.e. I decide to take vacation and my partner should wait till I return). In contrast, max-welfare makes decision for each session and can pick partner from those who are currently online which is very convenient.", "correct": "B", "A": "Choose the max-welfare pattern because max-welfare would choose the stable-matching pairing if that were indeed more optimal\u3002", "C": "I would choose a design pattern that could yield the most gains for learners over the course of their study. Max-welfare design pattern seems to be most aligned with this goal. But most practically, I would suggest moving with stable-pairing first.", "D": "Since design patterns don't provide a principle to guide us choosing better practices, I suggest trying the easier pattern to implement first (e.g. stable-pairing), then move to max-welfare if results are inadequate"}}